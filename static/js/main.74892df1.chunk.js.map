{"version":3,"sources":["constants/routes.js","views/Firebase/context.js","views/Firebase/firebase.js","views/Firebase/index.js","views/SignOut/index.js","views/Session/context.js","views/Session/withAuthentication.js","views/Session/withAuthorization.js","constants/shared.js","views/Navigation/MobileMenu.js","views/Navigation/index.js","views/Shared/FormInput/index.js","views/Shared/SignButton/index.js","views/Shared/AnotherAccount/index.js","views/Shared/LeftGridAuth/index.js","views/SignUp/index.js","constants/roles.js","views/PasswordForget/index.js","views/SignIn/index.js","views/Home/index.js","views/PasswordChange/index.js","views/Account/index.js","views/Admin/index.js","views/Read/index.js","views/Listen/index.js","views/Write/index.js","views/Blog/index.js","views/About/index.js","views/App/index.js","serviceWorker.js","index.js"],"names":["SIGN_IN","HOME","NON_AUTH_ROUTES","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","authDomain","process","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignInWithTwitter","twitterProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","users","post","posts","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","once","then","snapshot","dbUser","val","roles","app","initializeApp","this","database","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","emailAuthProvider","EmailAuthProvider","type","onClick","AuthUserContext","withAuthentication","WithAuthentication","state","JSON","parse","localStorage","getItem","listener","setItem","stringify","setState","removeItem","Provider","value","withAuthorization","condition","WithAuthorization","history","push","ROUTES","compose","withRouter","LOGO_LINK","PASSWORD_FORGET_INIT","error","INITIAL_FORM_STATE","username","passwordTwo","isAdmin","ERROR_MSG_ACCOUNT_EXISTS","ERROR_MESSAGES","SIGN_IN_METHODS","id","provider","MobileMenu","routes","useState","menu","toggleMenu","hamburgerClass","menuClass","className","map","item","key","List","Item","name","as","href","Content","slice","NavigationAuth","Sticky","Container","fluid","Menu","borderless","position","SignOut","NavigationNonAuth","activeItem","setActiveItem","to","Image","src","route","active","Navigation","FormInput","styleVal","onChange","isError","message","toUpperCase","includes","Form","Field","Input","content","pointing","placeholder","SignButton","onSubmit","Button","AnotherAccount","actionType","noUser","setError","event","socialAuthUser","set","displayName","catch","code","preventDefault","console","log","additionalUserInfo","profile","LeftGridAuth","Grid","Column","Header","SignUpFormBase","length","target","onChangeCheckbox","checked","rest","every","el","checkIfIncludes","split","SignUpForm","SignUpPage","columns","Row","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","verticalAlign","PasswordForgetForm","INITIAL_STATE","SignInFormBase","SignInForm","SignInPage","passwordOne","PasswordChangeForm","isInvalid","disabled","LoginManagementBase","onDefaultLoginLink","credential","linkWithCredential","fetchSignInMethods","fetchSignInMethodsForEmail","activeSignInMethods","onSocialLoginLink","linkWithPopup","onUnlink","providerId","unlink","signInMethod","onlyOneLeft","isEnabled","onLink","SocialLoginToggle","DefaultLoginToggle","LoginManagement","PasswordChange","AdminPage","loading","editorState","EditorState","createEmpty","on","usersObject","usersList","Object","keys","listener2","postsObject","postsList","Read","Listen","Write","Blog","About","hist","createBrowserHistory","path","component","HomePage","AccountPage","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.74892df1.chunk.js","sourcesContent":["export const LANDING = \"/\";\nexport const SIGN_UP = \"/signup\";\nexport const SIGN_IN = \"/signin\";\nexport const HOME = \"/home\";\nexport const WRITE = \"/write\";\nexport const READ = \"/read\";\nexport const LISTEN = \"/listen\";\nexport const ABOUT = \"/about\";\nexport const BLOG = \"/blog\";\nexport const CONTACT = \"/contact\";\nexport const ACCOUNT = \"/account\";\nexport const ADMIN = \"/admin\";\nexport const PASSWORD_FORGET = \"/pw-forget\";\nexport const ADMIN_DETAILS = \"/admin/:id\";\n\nexport const NON_AUTH_ROUTES = [HOME, READ, LISTEN, ABOUT, BLOG, CONTACT];\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","// const config = {\n//     apiKey: 'AIzaSyCkPMTAxdyCzMWQs_zak-HyAIvczNF1Uyc',\n//     authDomain: \"in-english-with-love.firebaseapp.com\",\n//     databaseURL: \"https://in-english-with-love.firebaseio.com\",\n//     projectId: \"in-english-with-love\",\n//     storageBucket: \"\",\n//     messagingSenderId: \"37578537655\",\n//   };\n\n//   const firebaseConfig = {\n\n//     // projectId: \"in-english-with-love\",\n//     // storageBucket: \"in-english-with-love.appspot.com\",\n//     // messagingSenderId: \"37578537655\",\n//     // appId: \"1:37578537655:web:6e64e4c58a5fe0e78d2b32\",\n//     // measurementId: \"G-TNREYPX14B\"\n//   };\n\nimport app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\n/*  The process. env global variable is injected by the Node\n    at runtime for your application to use and it represents\n    the state of the system environment your application  is \n    in when it starts.\n*/\n\nconst config = {\n  apiKey: \"AIzaSyCkPMTAxdyCzMWQs_zak-HyAIvczNF1Uyc\",\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n    this.auth = app.auth();\n    //\n    this.db = app.database();\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\n\n  }\n\n  // *** Auth API ***\n  doCreateUserWithEmailAndPassword = (email, password) => {\n    return this.auth.createUserWithEmailAndPassword(email, password);\n  };\n\n  doSignInWithEmailAndPassword = (email, password) => {\n    return this.auth.signInWithEmailAndPassword(email, password);\n  };\n\n  doSignInWithGoogle = () => this.auth.signInWithPopup(this.googleProvider);\n\n  doSignInWithFacebook = () => this.auth.signInWithPopup(this.facebookProvider);\n\n  doSignInWithTwitter = () => this.auth.signInWithPopup(this.twitterProvider);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = (email) => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = (password) =>\n    this.auth.currentUser.updatePassword(password);\n\n  // *** User API ***\n\n  /* The paths in the ref() method match \n  the location where your entities (users)\n  will be stored in Firebase's realtime database API. \n  */\n\n  user = (uid) => this.db.ref(`users/${uid}`);\n  users = () => this.db.ref(\"users\");\n\n  post = (uid) => this.db.ref(`posts/${uid}`);\n  posts = () => this.db.ref(\"posts\");\n\n  // *** Merge Auth and DB User API *** //\n  onAuthUserListener = (next, fallback) =>\n    this.auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        this.user(authUser.uid)\n          .once(\"value\")\n          .then((snapshot) => {\n            const dbUser = snapshot.val();\n\n            // default empty roles\n            if (!dbUser.roles) {\n              dbUser.roles = {};\n              // dbUser = {};\n            }\n\n            // merge auth and db user\n            authUser = {\n              uid: authUser.uid,\n              email: authUser.email,\n              ...dbUser,\n            };\n\n            next(authUser);\n          });\n      } else {\n        fallback();\n      }\n    });\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from \"./context\";\nimport Firebase from \"./firebase\";\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import React from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n  <button type=\"button\" onClick={firebase.doSignOut}>\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);","import React from \"react\";\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import React from \"react\";\n\nimport AuthUserContext from \"./context\";\nimport { withFirebase } from \"../Firebase\";\n\nconst withAuthentication = (Component) => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: JSON.parse(localStorage.getItem(\"authUser\")),\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        // next\n        // will be used if a user exists\n        (authUser) => {\n          /* every time Firebase's listener is invoked, \n          the authenticated user stored in the browser's local storage\n          */\n          localStorage.setItem(\"authUser\", JSON.stringify(authUser));\n          this.setState({ authUser });\n        },\n        // fallback\n        // will be used if there's no user found\n        () => {\n          localStorage.removeItem(\"authUser\");\n          this.setState({ authUser: null });\n        }\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\n\nimport AuthUserContext from \"./context\";\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst withAuthorization = (condition) => (Component) => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        // next\n        (authUser) => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n        // fallback\n        () => this.props.history.push(ROUTES.SIGN_IN)\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {(authUser) =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(withRouter, withFirebase)(WithAuthorization);\n};\n\nexport default withAuthorization;\n","export const LOGO_LINK =\n  \"https://firebasestorage.googleapis.com/v0/b/in-english-with-love.appspot.com/o/logo.png?alt=media&token=378c1c9e-0248-4f3f-bda3-105628619e8f\";\n\nexport const GOOGLE_LINK =\n  \"https://firebasestorage.googleapis.com/v0/b/in-english-with-love.appspot.com/o/google.png?alt=media&token=96f2a909-0b68-44df-9398-5e14e962140e\";\n\nexport const FACEBOOK_LINK =\n  \"https://firebasestorage.googleapis.com/v0/b/in-english-with-love.appspot.com/o/faceb.png?alt=media&token=54936a45-1669-4d78-b480-8622a51189e0\";\n// \"https://firebasestorage.googleapis.com/v0/b/in-english-with-love.appspot.com/o/facebook.png?alt=media&token=9a01f538-8c5c-4920-b04e-7d4a60014fef\";\n//  error message\n\nexport const PASSWORD_FORGET_INIT = {\n  email: \"\",\n  error: null,\n};\nexport const INITIAL_FORM_STATE = {\n  username: \"\",\n  email: \"\",\n  password: \"\",\n  \"repeat password\": \"\",\n  passwordTwo: \"\",\n  isAdmin: false,\n  error: null,\n};\nexport const ERROR_CODE_ACCOUNT_EXISTS =\n  \"auth/account-exists-with-different-credential\";\n\nexport const ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with an E-Mail address to\n  this social account already exists. \n`;\n\nexport const ERROR_MESSAGES = {\n  username: \"The username must be 4 characters long or more.\",\n  confirmPassword: \"The passwords don't much\",\n  accountExist:\n    \"An account with an E-Mail address tothis social account already exists. \",\n};\nexport const SIGN_IN = \"SIGN_IN\";\nexport const SIGN_UP = \"SIGN_UP\";\n\nexport const SIGN_IN_METHODS = [\n  {\n    id: \"password\",\n    provider: null,\n  },\n  {\n    id: \"google.com\",\n    provider: \"googleProvider\",\n  },\n  {\n    id: \"facebook.com\",\n    provider: \"facebookProvider\",\n  },\n];\n","import React, { useState } from \"react\";\nimport { List } from \"semantic-ui-react\";\n\nconst MobileMenu = ({ routes }) => {\n  const [menu, toggleMenu] = useState(false);\n  const hamburgerClass = menu ? \"open\" : \"\";\n  const menuClass = menu ? \"mobile-open-menu\" : \"mobile-close-menu\";\n  return (\n    <div className=\"mobile-nav-bar mobile-view\">\n      <div\n        className=\"menu-icon-wrapper float-left\"\n        onClick={() => toggleMenu(!menu)}\n      >\n        <div id=\"hamburger\" className={hamburgerClass}>\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n        </div>\n      </div>\n\n      <div className={menuClass}>\n        {routes.map((item, key) => {\n          return (\n            <List.Item\n              name={\"error\"}\n              key={key}\n              as=\"a\"\n              href={item}\n              className=\"mobile-sidebar-menu\"\n            >\n              <List.Content>{item.slice(1)}</List.Content>\n            </List.Item>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MobileMenu;\n","import React, { Component, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as ROUTES from \"../../constants/routes\";\nimport SignOutButton from \"../SignOut\";\nimport { AuthUserContext } from \"../Session\";\nimport * as ROLES from \"../../constants/roles\";\nimport {\n  Menu,\n  Container,\n  Image,\n  Sticky,\n  Item,\n  MenuItem,\n} from \"semantic-ui-react\";\nimport { LOGO_LINK } from \"../../constants/shared\";\nimport MobileMenu from \"./MobileMenu\";\nimport \"./style.scss\";\n// const Navigation = () => (\n//   <div>\n//     <AuthUserContext.Consumer>\n//       {(authUser) =>\n//         authUser ? (\n//           <NavigationAuth authUser={authUser} />\n//         ) : (\n//           <NavigationNonAuth />\n//         )\n//       }\n//     </AuthUserContext.Consumer>\n//   </div>\n// );\n\nconst NavigationAuth = ({ authUser }) => {\n  const [activeItem, setActiveItem] = useState(ROUTES.SIGN_IN);\n  return (\n    <div>\n      <Sticky className=\"nav-bar-sticky\">\n        <Container fluid>\n          <Menu className=\"nav-bar-menu\" borderless>\n            <Menu.Menu className=\"logo-menu-item\">\n              <Menu.Item\n                as={\"a\"}\n                href={`${ROUTES.HOME}`}\n                /* className=\"logo-container\" */\n              >\n                {/* <Image src={logo} /> */}\n                <span className=\"logo-name\">LOGO</span>\n              </Menu.Item>\n            </Menu.Menu>\n            <Menu.Menu position={\"right\"}>\n              <Menu.Item as=\"a\" href={ROUTES.HOME}>\n                Read\n              </Menu.Item>\n              <Menu.Item as=\"a\" href={ROUTES.ACCOUNT}>\n                Account\n              </Menu.Item>\n\n              {!!authUser.roles[ROLES.ADMIN] && (\n                <Menu.Item as=\"a\" href={ROUTES.ADMIN}>\n                  Admin\n                </Menu.Item>\n              )}\n              <SignOutButton />\n            </Menu.Menu>\n          </Menu>\n        </Container>\n      </Sticky>\n      <li>\n        <SignOutButton />\n      </li>\n    </div>\n  );\n};\n\nconst NavigationNonAuth = () => {\n  const [activeItem, setActiveItem] = useState(ROUTES.SIGN_IN);\n  return (\n    <div>\n      <Sticky className=\"nav-bar-sticky\">\n        <Container fluid>\n          <MobileMenu routes={ROUTES.NON_AUTH_ROUTES} />\n          <Menu className=\"nav-bar-menu\" borderless>\n            <Menu.Menu className=\"main-menu\">\n              <Menu.Item className=\"logo-container\">\n                <Link\n                  onClick={() => setActiveItem(ROUTES.READ)}\n                  to={ROUTES.READ}\n                >\n                  <Image className=\"menu-logo\" src={LOGO_LINK} />\n                </Link>\n              </Menu.Item>\n              {ROUTES.NON_AUTH_ROUTES.map((route) => (\n                <Menu.Item key={route} active={activeItem === route}>\n                  <Link onClick={() => setActiveItem(route)} to={route}>\n                    {route.slice(1)}\n                  </Link>\n                </Menu.Item>\n              ))}\n            </Menu.Menu>\n            <Menu.Menu className=\"sign-menu\" position={\"right\"}>\n              <Menu.Item active={activeItem === ROUTES.SIGN_UP}>\n                <Link\n                  onClick={() => setActiveItem(ROUTES.SIGN_UP)}\n                  to={ROUTES.SIGN_UP}\n                >\n                  SIGN UP\n                </Link>\n              </Menu.Item>\n              <Menu.Item active={activeItem === ROUTES.SIGN_IN}>\n                <Link\n                  onClick={() => setActiveItem(ROUTES.SIGN_IN)}\n                  to={ROUTES.SIGN_IN}\n                >\n                  SIGN IN\n                </Link>\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu>\n        </Container>\n      </Sticky>\n    </div>\n  );\n};\n\nconst Navigation = () => (\n  <div>\n    <AuthUserContext.Consumer>\n      {(authUser) =>\n        authUser ? (\n          <NavigationAuth authUser={authUser} />\n        ) : (\n          <NavigationNonAuth />\n        )\n      }\n    </AuthUserContext.Consumer>\n  </div>\n);\n\nexport default Navigation;\n","import React from \"react\";\nimport { Form } from \"semantic-ui-react\";\nimport \"./style.scss\";\n\nconst FormInput = ({ styleVal, error, type, value, onChange }) => {\n  const isError =\n    error &&\n    error.message &&\n    (error.message.toUpperCase().includes(value.toUpperCase()) ||\n      error.message.toUpperCase().includes(type.toUpperCase()));\n  return (\n    <Form.Field>\n      <label className=\"form-label\">{value && value.toUpperCase()}</label>\n      <Form.Input\n        error={isError ? { content: error.message, pointing: \"below\" } : false}\n        name={value}\n        type={type}\n        className={`form-input ${isError ? styleVal : \"\"}`}\n        placeholder={value}\n        onChange={onChange}\n      />\n    </Form.Field>\n  );\n};\n\nexport default FormInput;\n","import React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport \"./style.scss\";\n\nconst SignButton = ({ value, onSubmit }) => {\n  return (\n    <Button className=\"sign-button\" type=\"submit\">\n      <span className=\"button-text\">{value}</span>\n    </Button>\n  );\n};\n\nexport default SignButton;\n","import React, { useState } from \"react\";\nimport { Image, Button } from \"semantic-ui-react\";\nimport {\n  GOOGLE_LINK,\n  FACEBOOK_LINK,\n  SIGN_IN,\n  SIGN_UP,\n  ERROR_CODE_ACCOUNT_EXISTS,\n  ERROR_MSG_ACCOUNT_EXISTS,\n} from \"../../../constants/shared\";\nimport \"./style.scss\";\nimport * as ROUTES from \"../../../constants/routes\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport { withFirebase } from \"../../Firebase\";\n\nconst AnotherAccountBase = ({\n  type,\n  firebase,\n  actionType,\n  history,\n  noUser,\n}) => {\n  const [error, setError] = useState(null);\n  // let onSubmit = () => null;\n  // switch (type) {\n  //   case SIGN_IN: {\n  const onSubmitGoogle = (event) => {\n    firebase\n      .doSignInWithGoogle()\n      .then((socialAuthUser) => {\n        // Create a user in your Firebase Realtime Database too\n        return firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.user.displayName,\n          email: socialAuthUser.user.email,\n          roles: {},\n        });\n      })\n      .then(() => {\n        setError(null);\n        history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        // console.log(error.code, 'errorCode')\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          setError(ERROR_MSG_ACCOUNT_EXISTS);\n        }\n      });\n\n    event.preventDefault();\n  };\n\n  const onSubmitFacebook = (event) => {\n    firebase\n      .doSignInWithFacebook()\n      .then((socialAuthUser) => {\n        console.log(socialAuthUser, \"socialAuthUser\");\n        // Create a user in your Firebase Realtime Database too\n        return firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: {},\n        });\n      })\n      .then(() => {\n        setError(null);\n        history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          setError(ERROR_MSG_ACCOUNT_EXISTS);\n        }\n      });\n    event.preventDefault();\n  };\n\n  const onSubmitTwitter = (event) => {\n    firebase\n      .doSignInWithTwitter()\n      .then((socialAuthUser) => {\n        // Create a user in your Firebase Realtime Database too\n        return firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: {},\n        });\n      })\n      .then(() => {\n        setError(null);\n        history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        setError(error);\n      });\n    event.preventDefault();\n  };\n\n  return (\n    <div className=\"container-another-account\">\n      <p className=\"another-account\"> {actionType} WITH ANOTHER ACCOUNT: </p>\n      <div className=\"contaniner-social-assets\">\n        <Image\n          onClick={onSubmitGoogle}\n          className=\"social-image-google\"\n          src={GOOGLE_LINK}\n        />\n        <Image\n          onClick={onSubmitFacebook}\n          className=\"social-image-facebook\"\n          src={FACEBOOK_LINK}\n        />\n        {error && <p className={noUser}> {error}</p>}\n        {/* <Image\n          onClick={onSubmitTwitter}\n          className=\"social-image-facebook\"\n          src={FACEBOOK_LINK}\n        /> */}\n      </div>\n    </div>\n  );\n};\n\nconst AnotherAccount = compose(withRouter, withFirebase)(AnotherAccountBase);\n\nexport default AnotherAccount;\n","import React from \"react\";\nimport { Grid, Image, Header } from \"semantic-ui-react\";\nimport { LOGO_LINK } from \"../../../constants/shared\";\nimport \"./style.scss\";\n\nconst LeftGridAuth = () => {\n  return (\n    <Grid.Column className=\"left-side-sign\">\n      <Header className=\"left-side-header form-header\" as=\"h2\">\n        IN ENGLISH WITH <span className=\"style-love\">LOVE</span>\n      </Header>\n      <Image className=\"left-logo-size\" src={LOGO_LINK} />\n      <Header className=\"left-side-header form-header\" as=\"h2\">\n        LEARN NATURALLY.\n      </Header>\n    </Grid.Column>\n  );\n};\n\nexport default LeftGridAuth;\n","import React, { Component } from \"react\";\n// import { FirebaseContext } from \"../Firebase\";\nimport { withFirebase } from \"../Firebase\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport * as ROLES from \"../../constants/roles\";\nimport { ERROR_CODE_ACCOUNT_EXISTS } from \"../../constants/shared\";\nimport * as ROUTES from \"../../constants/routes\";\nimport { Grid, Header, Image, Form } from \"semantic-ui-react\";\nimport {\n  LOGO_LINK,\n  ERROR_MESSAGES,\n  INITIAL_FORM_STATE,\n} from \"../../constants/shared\";\nimport { SignButton, FormInput, AnotherAccount, LeftGridAuth } from \"../Shared\";\n\nconst checkIfIncludes = (error, ...rest) =>\n  error &&\n  error.message &&\n  [...rest].every(\n    (el) => !error.message.toUpperCase().includes(el.toUpperCase())\n  );\n\n//   {error &&\n//     error.message &&\n//     !error.message.toUpperCase().includes(\"password\".toUpperCase()) &&\n//     !error.message.toUpperCase().includes(\"username\".toUpperCase()) &&\n//     !error.message.toUpperCase().includes(\"email\".toUpperCase())\n// }\n\nconst SignUpPage = () => (\n  <Grid columns={2} className=\"sign-grid\">\n    <Grid.Row>\n      <LeftGridAuth />\n      <Grid.Column>\n        <SignUpForm />\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n);\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_FORM_STATE };\n  }\n\n  onSubmit = (event) => {\n    const { username, email, password, isAdmin, error } = this.state;\n    // check userName and password match\n    if (username.length < 4) {\n      this.setState({\n        error: {\n          message: ERROR_MESSAGES.username,\n        },\n      });\n    } else if (password != this.state[\"repeat password\"]) {\n      this.setState({\n        error: {\n          message: ERROR_MESSAGES.confirmPassword,\n        },\n      });\n    } else {\n      const roles = {};\n\n      if (isAdmin) {\n        roles[ROLES.ADMIN] = ROLES.ADMIN;\n      }\n      this.props.firebase\n        .doCreateUserWithEmailAndPassword(email, password)\n        .then((authUser) => {\n          // Create a user in your Firebase realtime database\n          return this.props.firebase.user(authUser.user.uid).set({\n            username,\n            email,\n            roles,\n          });\n        })\n        .then(() => {\n          this.setState({ ...INITIAL_FORM_STATE });\n          // // props from the router\n          this.props.history.push(ROUTES.HOME);\n        })\n        .catch((error) => {\n          if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n            error.message = ERROR_MESSAGES.accountExist;\n          }\n          this.setState({ error });\n        });\n    }\n    // prevent a reload of the browser\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onChangeCheckbox = (event) => {\n    this.setState({ [event.target.name]: event.target.checked });\n  };\n\n  render() {\n    const { username, email, password, error, isAdmin } = this.state;\n    return (\n      <div>\n        <Form className=\"sign-form\" onSubmit={this.onSubmit}>\n          <div className=\"container-form-header\">\n            <Header className=\"form-header\" as=\"h2\">\n              SIGN UP\n            </Header>\n            {checkIfIncludes(error, \"password\", \"username\", \"email\") && (\n              <p className=\"error-no-user-sign-up\">{`${\n                error.message.split(\".\")[0]\n              }.`}</p>\n            )}\n          </div>\n          <FormInput\n            styleVal=\"username\"\n            error={error}\n            type=\"text\"\n            value=\"username\"\n            onChange={this.onChange}\n          />\n          <FormInput\n            styleVal=\"email-signup\"\n            error={error}\n            type=\"email\"\n            value=\"email\"\n            onChange={this.onChange}\n          />\n          <FormInput\n            styleVal=\"password-signup\"\n            error={error}\n            type=\"password\"\n            value=\"password\"\n            onChange={this.onChange}\n          />\n\n          <FormInput\n            styleVal=\"repeat-password-signup\"\n            error={error}\n            type=\"password\"\n            value=\"repeat password\"\n            onChange={this.onChange}\n          />\n          <SignButton value=\"SIGN UP\" />\n          <AnotherAccount\n            history={this.props.history}\n            firebase={this.props.firebase}\n            noUser={\"error-no-user-sign-up\"}\n            actionType=\"SIGN UP\"\n          />\n          <div className=\"container-account-ask\">\n            <p className=\"\">\n              ALREADY HAVE AN ACCOUNT?\n              <span className=\"sign-word\">\n                <Link to={ROUTES.SIGN_IN}>SIGN IN</Link>\n              </span>\n            </p>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\n/* check if admin\n<label>\n            Admin:\n            <input\n              name=\"isAdmin\"\n              type=\"checkbox\"\n              checked={isAdmin}\n              onChange={this.onChangeCheckbox}\n            />\n          </label> */\n\nconst SignUpLink = () => (\n  <p>\n    Already have an account?? <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n  </p>\n);\n\nconst SignUpForm = compose(withRouter, withFirebase)(SignUpFormBase);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n","export const ADMIN = \"ADMIN\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\nimport { PASSWORD_FORGET_INIT, LOGO_LINK } from \"../../constants/shared\";\nimport { Grid, Header, Image, Form } from \"semantic-ui-react\";\nimport { LeftGridAuth, FormInput, SignButton } from \"../Shared\";\nimport \"./style.scss\";\n\nconst PasswordForgetPage = () => (\n  <Grid columns={2} className=\"sign-grid\">\n    <Grid.Row>\n      <LeftGridAuth />\n      <Grid.Column verticalAlign=\"top\">\n        <PasswordForgetForm />\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n);\n\n// const INITIAL_STATE = {\n//   email: \"\",\n//   error: null,\n// };\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...PASSWORD_FORGET_INIT };\n  }\n\n  onSubmit = (event) => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...PASSWORD_FORGET_INIT });\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === \"\";\n\n    return (\n      <Form className=\"forget-password-form\" onSubmit={this.onSubmit}>\n        <div className=\"container-form-header\">\n          <Header className=\"form-header\" as=\"h2\">\n            Forgot your password?\n          </Header>\n          {error && error.message && (\n            <p className=\"error-no-user\">{`${error.message.split(\".\")[0]}.`}</p>\n          )}\n        </div>\n\n        <FormInput\n          styleVal=\"email-signin\"\n          error={error}\n          type=\"email\"\n          value=\"email\"\n          onChange={this.onChange}\n        />\n        <SignButton value=\"RESET MY PASSWORD\" />\n      </Form>\n    );\n  }\n}\n\n{\n  /* <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form> */\n}\n\nconst PasswordForgetLink = () => (\n  <div className=\"container-forgot-password\">\n    <p>\n      <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n    </p>\n  </div>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n","import React, { Component } from \"react\";\n// import { FirebaseContext } from \"../Firebase\";\nimport { withFirebase } from \"../Firebase\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport { SignUpLink } from \"../SignUp\";\nimport { PasswordForgetLink } from \"../PasswordForget\";\nimport { LOGO_LEFT_SIDE, LOGO_LINK, SIGN_IN } from \"../../constants/shared\";\nimport { Grid, Image, Form, Button, Header, Label } from \"semantic-ui-react\";\nimport * as ROUTES from \"../../constants/routes\";\n// import logot from \"./file.svg\";\nimport \"./style.scss\";\n\nimport { SignButton, FormInput, AnotherAccount, LeftGridAuth } from \"../Shared\";\nconst INITIAL_STATE = {\n  //   username: \"\",\n  email: \"\",\n  password: \"\",\n  error: null,\n};\n\n{\n  /* <div>\n    <h1>SignIn</h1>\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </div> */\n}\n\nconst SignInPage = () => (\n  <Grid columns={2} className=\"sign-grid\">\n    <Grid.Row >\n      <LeftGridAuth />\n      <Grid.Column className=\"sign-column\">\n        <SignInForm />\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n);\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const { username, email, password } = this.state;\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then((authUser) => {\n        this.setState({ ...INITIAL_STATE });\n        // props from the router\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n\n    // prevent a reload of the browser\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  render() {\n    const { username, email, password, passwordTwo, error } = this.state;\n    return (\n      <div>\n        <Form className=\"sign-form\" onSubmit={this.onSubmit}>\n          <div className=\"container-form-header\">\n            <Header className=\"form-header\" as=\"h2\">\n              SIGN IN\n            </Header>\n            {error &&\n              !error.message.includes(\"password\") &&\n              !error.message.includes(\"email\") && (\n                <p className=\"error-no-user\">{`${\n                  error.message.split(\".\")[0]\n                }.`}</p>\n              )}\n          </div>\n\n          <FormInput\n            styleVal=\"email-signin\"\n            error={error}\n            type=\"email\"\n            value=\"email\"\n            onChange={this.onChange}\n          />\n          <FormInput\n            styleVal=\"password-signin\"\n            error={error}\n            onChange={this.onChange}\n            type=\"password\"\n            value=\"password\"\n          />\n          <PasswordForgetLink />\n          <SignButton value=\"SIGN IN\" />\n          <AnotherAccount\n            type={SIGN_IN}\n            history={this.props.history}\n            firebase={this.props.firebase}\n            noUser={\"error-no-user\"}\n            actionType=\"SIGN IN\"\n          />\n          <div className=\"container-account-ask\">\n            <p className=\"\">\n              Don't have an account?\n              <span className=\"sign-word\">\n                <Link to={ROUTES.SIGN_UP}>Sign up</Link>\n              </span>\n            </p>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst SignInLink = () => (\n  <p>\n    Already have an account?? <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n  </p>\n);\n\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm, SignInLink };\n","import React from \"react\";\nimport { withAuthorization } from \"../Session\";\n\nconst HomePage = () => (\n  <div>\n    <h1>Home Page</h1>\n    <p>The Home Page is accessible by every signed in user.</p>\n  </div>\n);\n\n// authUser != null;\nconst condition = (authUser) => !!authUser;\n\nexport default withAuthorization(condition)(HomePage);\n","import React, { Component } from \"react\";\n\nimport { withFirebase } from \"../Firebase\";\n\nconst INITIAL_STATE = {\n  passwordOne: \"\",\n  passwordTwo: \"\",\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React, { Component } from \"react\";\nimport { AuthUserContext, withAuthorization } from \"../Session\";\n\nimport { PasswordForgetForm } from \"../PasswordForget\";\nimport PasswordChangeForm from \"../PasswordChange\";\n// import { withAuthorization } from \"../Session\";\nimport { SIGN_IN_METHODS } from \"../../constants/shared\";\nimport { withFirebase } from \"../Firebase\";\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {(authUser) => (\n      <div>\n        <h1>Account: {authUser.email}</h1>\n        <PasswordForgetForm />\n        <PasswordChangeForm />\n        <LoginManagement authUser={authUser} />\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nclass LoginManagementBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeSignInMethods: [],\n      error: null,\n    };\n  }\n\n  onDefaultLoginLink = (password) => {\n    const credential = this.props.firebase.emailAuthProvider.credential(\n      this.props.authUser.email,\n      password\n    );\n\n    this.props.firebase.auth.currentUser\n      // .linkAndRetrieveDataWithCredential(credential)\n      .linkWithCredential(credential)\n      .then(this.fetchSignInMethods)\n      .catch((error) => this.setState({ error }));\n  };\n\n  componentDidMount() {\n    this.fetchSignInMethods();\n  }\n\n  // all social networks you already linked to ur account\n  fetchSignInMethods = () => {\n    this.props.firebase.auth\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\n      .then((activeSignInMethods) =>\n        this.setState({ activeSignInMethods, error: null })\n      )\n      .catch((error) => this.setState({ error }));\n  };\n\n  onSocialLoginLink = (provider) => {\n    this.props.firebase.auth.currentUser\n      .linkWithPopup(this.props.firebase[provider])\n      .then(this.fetchSignInMethods)\n      .catch((error) => this.setState({ error }));\n  };\n\n  onUnlink = (providerId) => {\n    this.props.firebase.auth.currentUser\n      .unlink(providerId)\n      .then(this.fetchSignInMethods)\n      .catch((error) => this.setState({ error }));\n  };\n\n  render() {\n    const { activeSignInMethods, error } = this.state;\n    return (\n      <div>\n        Sign In Methods:\n        <ul>\n          {SIGN_IN_METHODS.map((signInMethod) => {\n            const onlyOneLeft = activeSignInMethods.length === 1;\n            const isEnabled = activeSignInMethods.includes(signInMethod.id);\n            return (\n              <li key={signInMethod.id}>\n                {signInMethod.id === \"password\" ? (\n                  <DefaultLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onDefaultLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                ) : (\n                  <SocialLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onSocialLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                )}\n              </li>\n            );\n          })}\n        </ul>\n        {error && error.message}\n      </div>\n    );\n  }\n}\n\nconst SocialLoginToggle = ({\n  onlyOneLeft,\n  isEnabled,\n  signInMethod,\n  onLink,\n  onUnlink,\n}) =>\n  isEnabled ? (\n    <button\n      type=\"button\"\n      onClick={() => onUnlink(signInMethod.id)}\n      disabled={onlyOneLeft}\n    >\n      Deactivate {signInMethod.id}\n    </button>\n  ) : (\n    <button type=\"button\" onClick={() => onLink(signInMethod.provider)}>\n      Link {signInMethod.id}\n    </button>\n  );\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { passwordOne: \"\", passwordTwo: \"\" };\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    this.props.onLink(this.state.passwordOne);\n    this.setState({ passwordOne: \"\", passwordTwo: \"\" });\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { onlyOneLeft, isEnabled, signInMethod, onUnlink } = this.props;\n    const { passwordOne, passwordTwo } = this.state;\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\n\n    return isEnabled ? (\n      <button\n        type=\"button\"\n        onClick={() => onUnlink(signInMethod.id)}\n        disabled={onlyOneLeft}\n      >\n        Deactivate {signInMethod.id}\n      </button>\n    ) : (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n\n        <button disabled={isInvalid} type=\"submit\">\n          Link {signInMethod.id}\n        </button>\n      </form>\n    );\n  }\n}\n\nconst LoginManagement = withFirebase(LoginManagementBase);\n\n// which means true. authUser exits\nconst condition = (authUser) => !!authUser;\n\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component } from \"react\";\nimport { withFirebase } from \"../Firebase\";\nimport { compose } from \"recompose\";\nimport ReactDOM from \"react-dom\";\nimport { Editor, EditorState } from \"draft-js\";\nimport { withAuthorization } from \"../Session\";\nimport * as ROLES from \"../../constants/roles\";\n\n// Admin\nclass AdminPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      users: [],\n      posts: [],\n    };\n\n    this.state = { editorState: EditorState.createEmpty() };\n    this.onChange = (editorState) => this.setState({ editorState });\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.listener = this.props.firebase.users().on(\"value\", (snapshot) => {\n      const usersObject = snapshot.val();\n\n      const usersList = Object.keys(usersObject).map((key) => ({\n        ...usersObject[key],\n        uid: key,\n      }));\n\n      this.setState({\n        users: usersList,\n        loading: false,\n      });\n    });\n\n    this.listener2 = this.props.firebase.posts().on(\"value\", (snapshot) => {\n      const postsObject = snapshot.val();\n\n      const postsList = Object.keys(postsObject).map((key) => ({\n        ...postsObject[key],\n        uid: key,\n      }));\n\n      this.setState({\n        posts: postsList,\n        loading: false,\n      });\n    });\n  }\n\n  componentWillMount() {\n    // this.listener()\n  }\n\n  render() {\n    const { users, loading, posts } = this.state;\n    console.log(this.state, \"posts\");\n    return (\n      <div>\n        <h1>Admin</h1>\n\n        {loading && <div>Loading ...</div>}\n        <p>The Admin Page is accessible by every signed in admin user.</p>\n        {/* <AddPost firebase={this.props.firebase} />\n        <PostsList posts={posts} firebase={this.props.firebase} /> */}\n        <Editor\n         editorState={this.state.editorState} onChange={this.onChange} />\n        {/* <UserList users={users} /> */}\n      </div>\n    );\n  }\n}\n\nclass AddPost extends Component {\n  state = {\n    textArea: \"INIT\",\n  };\n\n  handleChange = (e) => this.setState({ textArea: e.target.value });\n  onSubmit = () => {\n    const { textArea } = this.state;\n    // this.props.firebase.posts().on(\"value\", (snapshot) => {\n    //   const posts = snapshot.val();\n\n    // });\n\n    // Create a post in your Firebase realtime database\n    // this.props.firebase((post) => {\n    // console.log(post, \"post\");\n    return this.props.firebase.posts().push().set({\n      post: textArea,\n      type: \"history\",\n    });\n    // });\n  };\n\n  onRetrieve = () => {\n    // console.log(this.props.firebase.posts());\n  };\n  render() {\n    return (\n      <div>\n        <textarea value={this.state.textArea} onChange={this.handleChange} />\n        <button onClick={() => this.onSubmit()}> Submit </button>\n        <button onClick={() => this.onRetrieve()}> Retrieve </button>\n      </div>\n    );\n  }\n}\nconst UserList = ({ users }) => (\n  <ul>\n    {users.map((user) => (\n      <li key={user.uid}>\n        <span>\n          <strong>ID:</strong> {user.uid}\n        </span>\n        <br />\n        <span>\n          <strong>E-Mail:</strong> {user.email}\n        </span>\n        <br />\n        <span>\n          <strong>Username:</strong> {user.username}\n        </span>\n      </li>\n    ))}\n  </ul>\n);\n\nconst removePostFromDb = (post, firebase) => {\n  firebase.db.ref(`posts/${post.uid}`).remove();\n  // console.log(firebase.db.ref(`posts/${post.uid}`).remove(), 'post')\n  // firebase.on(\"value\", (snapshot) => {\n  //   // console.log(snapshot.val().remove());\n  //   let obj = snapshot.val()\n  //   console.log(snapshot.ref(post.uid))\n  //   // snapshot.val()\n\n  // });\n  // post.post = \"LOL\"\n  // ref.child(key).remove();\n};\n\nconst editPostFromDb = (post, firebase) => {\n  // firebase.db.ref(`posts/${post.uid}`).remove()\n  // console.log(firebase.db.ref(`posts/${post.uid}`))\n  firebase.db.ref(`posts/${post.uid}`).update({\n    post: \"UPDATED\",\n  });\n};\nconst PostsList = ({ posts, firebase }) => (\n  <ul>\n    {posts.map((post) => (\n      <li key={post.uid}>\n        <span>\n          <strong>ID:</strong> {post.uid}\n        </span>\n        <br />\n        <span>\n          <strong>Text:</strong> {post.post}\n        </span>\n        <br />\n        <span>\n          <strong>Type:</strong> {post.type}\n        </span>\n        <br />\n        <span>\n          <button onClick={() => removePostFromDb(post, firebase)}>\n            Remove post from db\n          </button>\n          <button onClick={() => editPostFromDb(post, firebase)}>\n            Edit post from db\n          </button>\n        </span>\n      </li>\n    ))}\n  </ul>\n);\n\nconst condition = (authUser) => authUser && !!authUser.roles[ROLES.ADMIN];\n\nexport default compose(withAuthorization(condition), withFirebase)(AdminPage);\n","import React, { Component } from 'react'\n\nclass Read extends Component {\n    render() {\n        return (\n            <div>\n                READ\n            </div>\n        )\n    }\n}\n\nexport default Read; ","import React, { Component } from 'react'\n\nclass Listen extends Component {\n    render() {\n        return (\n            <div>\n                Listen\n            </div>\n        )\n    }\n}\n\nexport default Listen;","import React, { Component } from 'react'\n\n class Write extends Component {\n    render() {\n        return (\n            <div>\n                Write\n            </div>\n        )\n    }\n}\n\nexport default Write; \n","import React, { Component } from \"react\";\nimport { withAuthorization } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\nimport { compose } from \"recompose\";\n\nclass Blog extends Component {\n  state = {\n    loading: false,\n    posts: [],\n  };\n\n  componentDidMount() {\n    this.listener = this.props.firebase.posts().on(\"value\", (snapshot) => {\n      const postsObject = snapshot.val();\n\n      const postsList = Object.keys(postsObject).map((key) => ({\n        ...postsObject[key],\n        uid: key,\n      }));\n\n      this.setState({\n        posts: postsList,\n        loading: false,\n      });\n    });\n  }\n\n  componentWillMount() {\n    // this.listener();\n  }\n\n  render() {\n      console.log(this.state)\n    return <div>Blog</div>;\n  }\n}\n\n// const condition = (authUser) => authUser && !!authUser.roles[ROLES.ADMIN];\n\nexport default withFirebase(Blog);\n\n// export default Blog;\n","import React, { Component } from 'react'\n\nclass About extends Component {\n    render() {\n        return (\n            <div>\n                About\n            </div>\n        )\n    }\n}\n\nexport default  About; ","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navigation from \"../Navigation\";\n// import LandingPage from \"../Landing\";\nimport SignUpPage from \"../SignUp\";\nimport SignInPage from \"../SignIn\";\nimport { AuthUserContext } from \"../Session\";\nimport PasswordForgetPage from \"../PasswordForget\";\nimport HomePage from \"../Home\";\nimport AccountPage from \"../Account\";\nimport AdminPage from \"../Admin\";\nimport Read from \"../Read\";\nimport Listen from \"../Listen\";\nimport Write from \"../Write\";\nimport { withAuthentication } from \"../Session\";\nimport Blog from \"../Blog\";\nimport About from \"../About\";\nimport { createBrowserHistory } from \"history\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst hist = createBrowserHistory();\n\nconst App = () => {\n  return (\n    <div>\n      <Router history={hist}>\n        <div>\n          <Navigation />\n          {/* <Switch> */}\n          <div className=\"land-container\">\n            <Route path={ROUTES.HOME} component={HomePage} />\n            <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n            <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n            <Route\n              path={ROUTES.PASSWORD_FORGET}\n              component={PasswordForgetPage}\n            />\n            <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n            <Route path={ROUTES.ADMIN} component={AdminPage} />\n            <Route path={ROUTES.WRITE} component={Write} />\n            <Route path={ROUTES.READ} component={Read} />\n            <Route path={ROUTES.LISTEN} component={Listen} />\n            <Route path={ROUTES.BLOG} component={Blog} />\n            <Route path={ROUTES.ABOUT} component={About} />\n          </div>\n          {/* </Switch> */}\n        </div>\n      </Router>\n    </div>\n  );\n};\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./views/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Firebase, { FirebaseContext } from \"./views/Firebase\";\n\n// style\nimport \"./style/style.scss\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    {/* <React.StrictMode> */}\n   \n    <App />\n    {/* </React.StrictMode> */}\n  </FirebaseContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}